name: docker-push

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  push:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'
          architecture: 'x64'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip flake8 isort build black

      - name: Lint flake8
        run: |
          flake8 --max-line-length 120 .

      - name: Lint black
        run: |
          black --check .

      - name: Lint isort
        run: |
          isort --profile black --check-only .

      - name: Configure AWS credentials
        if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.OPERATOR_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.OPERATOR_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' }}
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Bump version and push tag
        if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' }}
        uses: anothrNick/github-tag-action@1.35.0
        id: tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: false
          RELEASE_BRANCHES: master
          DEFAULT_BUMP: patch

      - name: Build, tag, and push image to Amazon ECR
        if: ${{ github.ref == 'refs/heads/master' && github.event_name == 'push' }}
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ github.event.repository.name }}
          IMAGE_TAG: ${{ steps.tag.outputs.new_tag }}
          ORGANIZATION_TOKEN: ${{ secrets.ORGANIZATION_GITHUB_TOKEN }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
